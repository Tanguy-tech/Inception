version: "3.3"

services:

  ngnix:
    build: requirements/nginx/
    container_name: ngnix
    ports:
      - "443:443"
    restart: on-failure
    env_file:
      - .env
    volumes:
      - wordpress
      - mariadb
    networks:
      - inception

  wordpress:
    build:
      context: requirements/wordpress/
      args:
        MYSQL_HOST: ${MYSQL_HOST}
        WP_DB_NAME: ${WP_DB_NAME}
        WP_DB_USR: ${WP_DB_USR}
        WP_DB_PWD: ${WP_DB_PWD}
        WP_ADMIN_USR: ${WP_ADMIN_USR}
        WP_ADMIN_PWD: ${WP_ADMIN_PWD}
        WP_ADMIN_MAIL: ${WP_ADMIN_MAIL}
    container_name: wordpress
    restart: on-failure
    env_file:
      - .env
    volumes:
      - wp_data/var/www/html
    depends_on:
      - mariadb
    networks:
      - inception
      - backend
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      WP_DB_NAME: ${WP_DB_NAME}
      WP_DB_USR: ${WP_DB_USR}
      WP_DB_PWD: ${WP_DB_PWD}
      WP_ADMIN_USR: ${WP_ADMIN_USR}
      WP_ADMIN_PWD: ${WP_ADMIN_PWD}
      WP_ADMIN_MAIL: ${WP_ADMIN_MAIL}
  
  mariadb:
    build:
      context: requirements/mariadb/
      args:
        MYSQL_ROOT_PWD: ${MYSQL_ROOT_PWD}
        WP_DB_NAME: ${WP_DB_NAME}
        WP_DB_USR: ${WP_DB_USR}
        WP_DB_PWD: ${WP_DB_PWD}
    container_name: mariadb
    restart: on-failure
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend
    environment:
      MYSQL_ROOT_PWD: ${MYSQL_ROOT_PWD}
      WP_DB_NAME: ${WP_DB_NAME}
      WP_DB_USR: ${WP_DB_USR}
      WP_DB_PWD: ${WP_DB_PWD}


networks:
  inception:
    driver: bridge
  backend:
    driver: bridge

volumes:
  db_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/tbillon/data/db_data
  
  wp_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/tbillon/data/wp_data
